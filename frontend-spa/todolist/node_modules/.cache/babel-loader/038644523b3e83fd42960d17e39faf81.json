{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nexport class ItemService {\n  constructor() {\n    this.baseUrl = \"http://localhost:8080\";\n  }\n\n  async getAll() {\n    try {\n      const d = document;\n      $table = d.querySelector(\".responsive\");\n      $form = d.querySelector(\"new-task-form\");\n      $template = d.getElementById(\"task-template\").content;\n      $fragment = d.createDocumentFragment();\n      const response = await fetch(this.baseUrl + \"/tasks\");\n      const json = await response.json();\n      if (!response.ok) throw {\n        status: response.status,\n        statusText: response.statusText\n      };\n      json.forEach(el => {\n        this.$template.d.querySelector(\".text\").textContent = el.task;\n        let $clone = d.importNode($template, true);\n        this.$fragment.appendChild($clone);\n      });\n      this.$table.querySelector(\".responsive\").appendChild($fragment);\n    } catch (err) {\n      let message = err.statusText || \"Error\";\n      this.$table.inserAdjacentHtml(\"afterend\", `<p><b>Error${err.status}: ${message}</b></p>`);\n    }\n  }\n\n}","map":{"version":3,"sources":["F:/usuarios/alumno/Escritorio/PROGRAMAS/SPA/todolist/src/services/TaskService.js"],"names":["React","axios","ItemService","baseUrl","getAll","d","document","$table","querySelector","$form","$template","getElementById","content","$fragment","createDocumentFragment","response","fetch","json","ok","status","statusText","forEach","el","textContent","task","$clone","importNode","appendChild","err","message","inserAdjacentHtml"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAN,CAAkB;AAAA;AAAA,SACvBC,OADuB,GACb,uBADa;AAAA;;AAGX,QAANC,MAAM,GAAG;AACb,QAAI;AAEN,YAAMC,CAAC,GAAGC,QAAV;AACAC,MAAAA,MAAM,GAAGF,CAAC,CAACG,aAAF,CAAgB,aAAhB,CAAT;AACAC,MAAAA,KAAK,GAAGJ,CAAC,CAACG,aAAF,CAAgB,eAAhB,CAAR;AACAE,MAAAA,SAAS,GAAGL,CAAC,CAACM,cAAF,CAAiB,eAAjB,EAAkCC,OAA9C;AACAC,MAAAA,SAAS,GAAGR,CAAC,CAACS,sBAAF,EAAZ;AACI,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,KAAKb,OAAL,GAAe,QAAhB,CAA5B;AACA,YAAMc,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEA,UAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB,MAAM;AAAEC,QAAAA,MAAM,EAAEJ,QAAQ,CAACI,MAAnB;AAA2BC,QAAAA,UAAU,EAAEL,QAAQ,CAACK;AAAhD,OAAN;AAElBH,MAAAA,IAAI,CAACI,OAAL,CAAaC,EAAE,IAAI;AACjB,aAAKZ,SAAL,CAAeL,CAAf,CAAiBG,aAAjB,CAA+B,OAA/B,EAAwCe,WAAxC,GAAsDD,EAAE,CAACE,IAAzD;AAEA,YAAIC,MAAM,GAAGpB,CAAC,CAACqB,UAAF,CAAahB,SAAb,EAAuB,IAAvB,CAAb;AACA,aAAKG,SAAL,CAAec,WAAf,CAA2BF,MAA3B;AACD,OALD;AAMA,WAAKlB,MAAL,CAAYC,aAAZ,CAA0B,aAA1B,EAAyCmB,WAAzC,CAAqDd,SAArD;AACD,KAnBD,CAmBE,OAAOe,GAAP,EAAY;AACZ,UAAIC,OAAO,GAAGD,GAAG,CAACR,UAAJ,IAAkB,OAAhC;AACA,WAAKb,MAAL,CAAYuB,iBAAZ,CAA8B,UAA9B,EAA2C,cAAaF,GAAG,CAACT,MAAO,KAAIU,OAAQ,UAA/E;AACD;AACF;;AA3BsB","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\"; \r\n\r\nexport class ItemService {\r\n  baseUrl = \"http://localhost:8080\";\r\n\r\n  async getAll() {\r\n    try {\r\n        \r\n  const d = document;\r\n  $table = d.querySelector(\".responsive\");\r\n  $form = d.querySelector(\"new-task-form\");\r\n  $template = d.getElementById(\"task-template\").content;\r\n  $fragment = d.createDocumentFragment();\r\n      const response = await fetch(this.baseUrl + \"/tasks\");\r\n      const json = await response.json();\r\n\r\n      if (!response.ok) throw { status: response.status, statusText: response.statusText };\r\n\r\n      json.forEach(el => {\r\n        this.$template.d.querySelector(\".text\").textContent = el.task;\r\n\r\n        let $clone = d.importNode($template,true);\r\n        this.$fragment.appendChild($clone);\r\n      })\r\n      this.$table.querySelector(\".responsive\").appendChild($fragment);\r\n    } catch (err) {\r\n      let message = err.statusText || \"Error\";\r\n      this.$table.inserAdjacentHtml(\"afterend\", `<p><b>Error${err.status}: ${message}</b></p>`);\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}