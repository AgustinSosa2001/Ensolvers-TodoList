{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nexport class ItemService {\n  constructor() {\n    this.baseUrl = \"http://localhost:8080\";\n  }\n\n  // const d = document;\n  //$table = d.querySelector(\".responsive\");\n  // $form = d.querySelector(\"new-task-form\");\n  // $template = d.getElementById(\"task-template\").content;\n  // $fragment = d.createDocumentFragment();\n  async getAll() {\n    //  try {\n    const response = await fetch(this.baseUrl + \"/tasks\");\n    const json = await response.json();\n    /*    if (!response.ok)\r\n          throw { status: response.status, statusText: response.statusText };\r\n            json.forEach((el) => {\r\n          this.$template.d.querySelector(\".text\").textContent = el.task;\r\n              let $clone = d.importNode($template, true);\r\n          this.$fragment.appendChild($clone);\r\n        });\r\n        this.$table.querySelector(\".responsive\").appendChild($fragment);\r\n      } catch (err) {\r\n        let message = err.statusText || \"Error\";\r\n        this.$table.inserAdjacentHtml(\r\n          \"afterend\",\r\n          `<p><b>Error${err.status}: ${message}</b></p>`\r\n        );*/\n  }\n\n}","map":{"version":3,"sources":["F:/usuarios/alumno/Escritorio/PROGRAMAS/SPA/todolist/src/services/TaskService.js"],"names":["React","axios","ItemService","baseUrl","getAll","response","fetch","json"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAN,CAAkB;AAAA;AAAA,SACrBC,OADqB,GACX,uBADW;AAAA;;AAGtB;AACC;AACD;AACA;AACA;AACa,QAANC,MAAM,GAAG;AACf;AACI,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,KAAKH,OAAL,GAAe,QAAhB,CAA5B;AACA,UAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEJ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIK;;AA9BoB","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport class ItemService {\r\n    baseUrl = \"http://localhost:8080\";\r\n    \r\n   // const d = document;\r\n    //$table = d.querySelector(\".responsive\");\r\n   // $form = d.querySelector(\"new-task-form\");\r\n   // $template = d.getElementById(\"task-template\").content;\r\n   // $fragment = d.createDocumentFragment();\r\n    async getAll() {\r\n    //  try {\r\n        const response = await fetch(this.baseUrl + \"/tasks\");\r\n        const json = await response.json();\r\n  \r\n    /*    if (!response.ok)\r\n          throw { status: response.status, statusText: response.statusText };\r\n  \r\n        json.forEach((el) => {\r\n          this.$template.d.querySelector(\".text\").textContent = el.task;\r\n  \r\n          let $clone = d.importNode($template, true);\r\n          this.$fragment.appendChild($clone);\r\n        });\r\n        this.$table.querySelector(\".responsive\").appendChild($fragment);\r\n      } catch (err) {\r\n        let message = err.statusText || \"Error\";\r\n        this.$table.inserAdjacentHtml(\r\n          \"afterend\",\r\n          `<p><b>Error${err.status}: ${message}</b></p>`\r\n        );*/\r\n      \r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}